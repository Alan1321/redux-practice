{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showcounter: true\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const alldata = {\n    counter: state.counter,\n    showcounter: state.showcounter\n  };\n\n  if (action.type === \"increment\") {\n    alldata.counter + action.amount;\n    return alldata;\n  } else if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showcounter: state.showcounter\n    };\n  }\n\n  if (action.type === \"showcounter\") {}\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/asubedi/Desktop/reduxpractice/src/store/index.js"],"names":["createStore","initialState","counter","showcounter","counterReducer","state","action","alldata","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;;AAEA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AACvD,QAAMC,OAAO,GAAG;AACdL,IAAAA,OAAO,EAAEG,KAAK,CAACH,OADD;AAEdC,IAAAA,WAAW,EAAEE,KAAK,CAACF;AAFL,GAAhB;;AAKA,MAAIG,MAAM,CAACE,IAAP,KAAgB,WAApB,EAAiC;AAC/BD,IAAAA,OAAO,CAACL,OAAR,GAAkBI,MAAM,CAACG,MAAzB;AACA,WAAOF,OAAP;AACD,GAHD,MAGO,IAAID,MAAM,CAACE,IAAP,KAAgB,WAApB,EAAiC;AACtC,WAAO;AACLN,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFd,KAAP;AAID;;AAED,MAAIG,MAAM,CAACE,IAAP,KAAgB,aAApB,EAAmC,CAClC;;AAED,SAAOH,KAAP;AACD,CApBD;;AAsBA,MAAMK,KAAK,GAAGV,WAAW,CAACI,cAAD,CAAzB;AAEA,eAAeM,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst initialState = { counter: 0, showcounter: true };\n\nconst counterReducer = (state = initialState, action) => {\n  const alldata = {\n    counter: state.counter,\n    showcounter: state.showcounter,\n  };\n\n  if (action.type === \"increment\") {\n    alldata.counter + action.amount;\n    return alldata;\n  } else if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showcounter: state.showcounter,\n    };\n  }\n\n  if (action.type === \"showcounter\") {\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}