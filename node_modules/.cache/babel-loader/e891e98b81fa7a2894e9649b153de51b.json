{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createContextSlice, createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showcounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter += action.payload;\n    },\n\n    decrement(state) {\n      state.counter -= 1;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//   const alldata = {\n//     counter: state.counter,\n//     showcounter: state.showcounter,\n//   };\n//   if (action.type === \"increment\") {\n//     alldata.counter += action.paylod;\n//     return alldata;\n//   } else if (action.type === \"decrement\") {\n//     alldata.counter -= 1;\n//     return alldata;\n//   }\n//   return state;\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/asubedi/Desktop/reduxpractice/src/store/index.js"],"names":["createStore","createContextSlice","createSlice","configureStore","initialState","counter","showcounter","counterSlice","name","reducers","increment","state","action","payload","decrement","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SACEC,kBADF,EAEEC,WAFF,EAGEC,cAHF,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAAY,EAAEA,YAFiB;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACN,OAAN,IAAiBO,MAAM,CAACC,OAAxB;AACD,KAHO;;AAIRC,IAAAA,SAAS,CAACH,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN,IAAiB,CAAjB;AACD;;AANO;AAHqB,CAAD,CAAhC,C,CAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMU,KAAK,GAAGZ,cAAc,CAAC;AAC3Ba,EAAAA,OAAO,EAAET,YAAY,CAACS;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGV,YAAY,CAACW,OAApC;AACP,eAAeH,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport {\n  createContextSlice,\n  createSlice,\n  configureStore,\n} from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showcounter: true };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter += action.payload;\n    },\n    decrement(state) {\n      state.counter -= 1;\n    },\n  },\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   const alldata = {\n//     counter: state.counter,\n//     showcounter: state.showcounter,\n//   };\n\n//   if (action.type === \"increment\") {\n//     alldata.counter += action.paylod;\n//     return alldata;\n//   } else if (action.type === \"decrement\") {\n//     alldata.counter -= 1;\n//     return alldata;\n//   }\n\n//   return state;\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\n\nexport const counterActions = counterSlice.actions;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}